package farm3.spring.model;
// Generated Sep 25, 2016 9:18:21 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.google.gson.annotations.Expose;


/**
 * RawMaterial generated by hbm2java
 */
@Entity
@Table(name = "raw_material")
public class RawMaterial {
	@Id
	@Column(name="id")
	@GeneratedValue(strategy=GenerationType.AUTO)
	private Integer id;
	@ManyToOne
	@JoinColumn(name = "type_mateial_id")
	private TypeMaterial typeMaterial;
	@ManyToOne
	@JoinColumn(name = "unit_raw_material_id")
	@Expose private UnitRawMaterial unitRawMaterial;
	@Column(name = "name")
	private String name;
	@Column(name = "quantity")
	@Expose private int quantity;
	@Column(name = "place")
	private String place;
	@Column(name = "statusalert")
	private int statusalert;
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "rawMaterial")
	@Fetch(value = FetchMode.SUBSELECT)
	private List<RawMaterialOrder> rawMaterialOrders;
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "rawMaterial")
	@Fetch(value = FetchMode.SUBSELECT)
	private List<RawMaterialNutrient> rawMaterialNutrients ;
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "rawMaterial")
	@Fetch(value = FetchMode.SUBSELECT)
	private List<RawMaterialRelease> rawMaterialReleases;
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "rawMaterial")
	@Fetch(value = FetchMode.SUBSELECT)
	private List<RawMaterialImport> rawMaterialImports;
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "rawMaterial")
	@Fetch(value = FetchMode.SUBSELECT)
	private List<RawMaterialPrice> rawMaterialPrices;
	public Integer getId() {
		return id;
	}
	public void setId(Integer id) {
		this.id = id;
	}
	public TypeMaterial getTypeMaterial() {
		return typeMaterial;
	}
	public void setTypeMaterial(TypeMaterial typeMaterial) {
		this.typeMaterial = typeMaterial;
	}
	public UnitRawMaterial getUnitRawMaterial() {
		return unitRawMaterial;
	}
	public void setUnitRawMaterial(UnitRawMaterial unitRawMaterial) {
		this.unitRawMaterial = unitRawMaterial;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getQuantity() {
		return quantity;
	}
	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}
	public String getPlace() {
		return place;
	}
	public void setPlace(String place) {
		this.place = place;
	}
	public int getStatusalert() {
		return statusalert;
	}
	public void setStatusalert(int statusalert) {
		this.statusalert = statusalert;
	}
	public List<RawMaterialOrder> getRawMaterialOrders() {
		return rawMaterialOrders;
	}
	public void setRawMaterialOrders(List<RawMaterialOrder> rawMaterialOrders) {
		this.rawMaterialOrders = rawMaterialOrders;
	}
	public List<RawMaterialNutrient> getRawMaterialNutrients() {
		return rawMaterialNutrients;
	}
	public void setRawMaterialNutrients(List<RawMaterialNutrient> rawMaterialNutrients) {
		this.rawMaterialNutrients = rawMaterialNutrients;
	}
	public List<RawMaterialRelease> getRawMaterialReleases() {
		return rawMaterialReleases;
	}
	public void setRawMaterialReleases(List<RawMaterialRelease> rawMaterialReleases) {
		this.rawMaterialReleases = rawMaterialReleases;
	}
	public List<RawMaterialImport> getRawMaterialImports() {
		return rawMaterialImports;
	}
	public void setRawMaterialImports(List<RawMaterialImport> rawMaterialImports) {
		this.rawMaterialImports = rawMaterialImports;
	}
	public List<RawMaterialPrice> getRawMaterialPrices() {
		return rawMaterialPrices;
	}
	public void setRawMaterialPrices(List<RawMaterialPrice> rawMaterialPrices) {
		this.rawMaterialPrices = rawMaterialPrices;
	}
	
	
	/*private Integer id;
	private TypeMaterial typeMaterial;
	@Expose private UnitRawMaterial unitRawMaterial;
	private String name;
	@Expose private int quantity;
	private String place;
	private int statusalert;
	private Set<RawMaterialOrder> rawMaterialOrders = new HashSet<RawMaterialOrder>(0);
	private Set<RawMaterialNutrient> rawMaterialNutrients = new HashSet<RawMaterialNutrient>(0);
	private Set<RawMaterialRelease> rawMaterialReleases = new HashSet<RawMaterialRelease>(0);
	private Set<RawMaterialImport> rawMaterialImports = new HashSet<RawMaterialImport>(0);
	private Set<RawMaterialPrice> rawMaterialPrices = new HashSet<RawMaterialPrice>(0);

	public RawMaterial() {
	}

	public RawMaterial(TypeMaterial typeMaterial, UnitRawMaterial unitRawMaterial, int quantity, int statusalert) {
		this.typeMaterial = typeMaterial;
		this.unitRawMaterial = unitRawMaterial;
		this.quantity = quantity;
		this.statusalert = statusalert;
	}

	public RawMaterial(TypeMaterial typeMaterial, UnitRawMaterial unitRawMaterial, String name, int quantity,
			String place, int statusalert, Set<RawMaterialOrder> rawMaterialOrders,
			Set<RawMaterialNutrient> rawMaterialNutrients, Set<RawMaterialRelease> rawMaterialReleases,
			Set<RawMaterialImport> rawMaterialImports, Set<RawMaterialPrice> rawMaterialPrices) {
		this.typeMaterial = typeMaterial;
		this.unitRawMaterial = unitRawMaterial;
		this.name = name;
		this.quantity = quantity;
		this.place = place;
		this.statusalert = statusalert;
		this.rawMaterialOrders = rawMaterialOrders;
		this.rawMaterialNutrients = rawMaterialNutrients;
		this.rawMaterialReleases = rawMaterialReleases;
		this.rawMaterialImports = rawMaterialImports;
		this.rawMaterialPrices = rawMaterialPrices;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type_mateial_id", nullable = false)
	public TypeMaterial getTypeMaterial() {
		return this.typeMaterial;
	}

	public void setTypeMaterial(TypeMaterial typeMaterial) {
		this.typeMaterial = typeMaterial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "unit_raw_material_id", nullable = false)
	public UnitRawMaterial getUnitRawMaterial() {
		return this.unitRawMaterial;
	}

	public void setUnitRawMaterial(UnitRawMaterial unitRawMaterial) {
		this.unitRawMaterial = unitRawMaterial;
	}

	@Column(name = "name", unique = true, length = 150)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "place", length = 50)
	public String getPlace() {
		return this.place;
	}

	public void setPlace(String place) {
		this.place = place;
	}

	@Column(name = "statusalert", nullable = false)
	public int getStatusalert() {
		return this.statusalert;
	}

	public void setStatusalert(int statusalert) {
		this.statusalert = statusalert;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rawMaterial")
	public Set<RawMaterialOrder> getRawMaterialOrders() {
		return this.rawMaterialOrders;
	}

	public void setRawMaterialOrders(Set<RawMaterialOrder> rawMaterialOrders) {
		this.rawMaterialOrders = rawMaterialOrders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rawMaterial")
	public Set<RawMaterialNutrient> getRawMaterialNutrients() {
		return this.rawMaterialNutrients;
	}

	public void setRawMaterialNutrients(Set<RawMaterialNutrient> rawMaterialNutrients) {
		this.rawMaterialNutrients = rawMaterialNutrients;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rawMaterial")
	public Set<RawMaterialRelease> getRawMaterialReleases() {
		return this.rawMaterialReleases;
	}

	public void setRawMaterialReleases(Set<RawMaterialRelease> rawMaterialReleases) {
		this.rawMaterialReleases = rawMaterialReleases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rawMaterial")
	public Set<RawMaterialImport> getRawMaterialImports() {
		return this.rawMaterialImports;
	}

	public void setRawMaterialImports(Set<RawMaterialImport> rawMaterialImports) {
		this.rawMaterialImports = rawMaterialImports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rawMaterial")
	public Set<RawMaterialPrice> getRawMaterialPrices() {
		return this.rawMaterialPrices;
	}

	public void setRawMaterialPrices(Set<RawMaterialPrice> rawMaterialPrices) {
		this.rawMaterialPrices = rawMaterialPrices;
	}*/

}
